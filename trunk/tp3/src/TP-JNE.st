TestCase subclass: #TPTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP-JNE'!!TPTest methodsFor: 'example' stamp: 'MarianoSemelman 11/11/2011 15:13'!test01	self assert: true.! !!TPTest methodsFor: 'example' stamp: 'MarianoSemelman 11/14/2011 18:18'!test10testQuestionShellHelper	| pepe |pepe := BooleanQuestion new.pepe text: '¿Esto es una pregunta?'.BooleanQuestionShellHelper print: pepe.! !!TPTest methodsFor: 'example' stamp: 'MarianoSemelman 11/14/2011 18:44'!test20	Question createSubclassWithPrefix: 'Lola'.	Question deleteSubclassWithPrefix: 'Lola'  ! !!TPTest methodsFor: 'instancias' stamp: 'MarianoSemelman 11/14/2011 17:21'!emptyApplicationForm	(ApplicationForm withCode: -1)  ifNil:  [^ ApplicationForm newWith: -1 ]! !!TPTest methodsFor: 'instancias' stamp: 'MarianoSemelman 11/11/2011 15:54'!newApplicationForm 	| temp |	temp := (Random new) nextValue.	^ ApplicationForm newWith: temp.! !Object subclass: #ProgrammableObject	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP-JNE'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ProgrammableObject class	instanceVariableNames: ''!!ProgrammableObject class methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 18:36'!createSubclassWithPrefix: prefix	^ self subclass: (prefix, self name asString) asSymbol						instanceVariableNames: ''						classVariableNames: ''						poolDictionaries: ''						category: 'TP-JNE'.	! !!ProgrammableObject class methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 19:10'!deleteSubclassWithPrefix: prefix	| aBorrar |	subclasses ifNotNilDo: [: subclass | 		( subclass name asString beginsWith: prefix) ifTrue: [subclass removeFromSystem ].	].! !ProgrammableObject subclass: #Question	instanceVariableNames: 'text'	classVariableNames: ''	poolDictionaries: ''	category: 'TP-JNE'!!Question methodsFor: 'accessing' stamp: 'Caro 11/9/2011 21:06'!text	^ text! !!Question methodsFor: 'accessing' stamp: 'Caro 11/9/2011 21:06'!text: anObject	text := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Question class	instanceVariableNames: ''!!Question class methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 20:54'!buildQuestionType: prefix	| newQuestion newAnswer newQuestionHelper|	newQuestion := Question createSubclassWithPrefix: prefix.	newAnswer := Answer createSubclassWithPrefix: prefix.	newQuestionHelper := QuestionShellHelper createSubclassWithPrefix: prefix.	newQuestion compile: ('buildAnswer	|res|	res := ', prefix, 'Answer new.	res question: self.	^ res.	').	newQuestionHelper class compile: ('parse: theUserInput for: aQuestion	| anAnswer |	anAnswer := aQuestion buildAnswer.	^ anAnswer.	').	newQuestionHelper class compile: ('handle: aQuestion	^ aQuestion class name = ', prefix, 'Question' asSymbol) .	newQuestionHelper class compile: ('print: aQuestion	^ super print: aQuestion.')  ! !!Question class methodsFor: 'as yet unclassified' stamp: 'Caro 11/9/2011 21:08'!new: aText	| res |	res := Question new.	res text: aText.	^ res.! !Question subclass: #TextQuestion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP-JNE'!!TextQuestion methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 19:17'!buildAnswer	|res|	res := TextAnswer new.	res question: self.	^ res.	! !Question subclass: #BooleanQuestion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP-JNE'!!BooleanQuestion methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 19:17'!buildAnswer	|res|	res := BooleanAnswer new.	res question: self.	^ res.	! !ProgrammableObject subclass: #QuestionShellHelper	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP-JNE'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!QuestionShellHelper class	instanceVariableNames: ''!!QuestionShellHelper class methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 17:34'!handle: aQuestion"retornar true si el helper en cuestion es el relacionado con el tipo de pregunta del parametro"	#abstractMethod! !!QuestionShellHelper class methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 19:15'!new	^ #ShouldNotImplement! !!QuestionShellHelper class methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 20:56'!print: aQuestion	^ aQuestion text.! !!QuestionShellHelper class methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 17:57'!thatHandles: aQuestion	^ (QuestionShellHelper subclasses select: [:  subclass |  subclass handle: aQuestion  ]) first.! !QuestionShellHelper subclass: #TextQuestionShellHelper	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP-JNE'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!TextQuestionShellHelper class	instanceVariableNames: ''!!TextQuestionShellHelper class methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 20:42'!handle: aQuestion	^ aQuestion class name = 'TextQuestion' asSymbol.! !!TextQuestionShellHelper class methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 20:35'!parse: theUserInput for: aQuestion	| anAnswer |	(theUserInput isNil | theUserInput isEmpty) ifTrue: [^ #error].	anAnswer := aQuestion buildAnswer.	anAnswer value: theUserInput.  	^ anAnswer.	! !!TextQuestionShellHelper class methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 20:56'!print: aQuestion	^ super print: aQuestion.! !QuestionShellHelper subclass: #BooleanQuestionShellHelper	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP-JNE'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BooleanQuestionShellHelper class	instanceVariableNames: ''!!BooleanQuestionShellHelper class methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 20:41'!handle: aQuestion	^ aQuestion class name = 'BooleanQuestion' asSymbol.! !!BooleanQuestionShellHelper class methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 20:34'!parse: theUserInput for: aQuestion	| anAnswer |	(theUserInput isNil) ifTrue: [ ^ #error].	(theUserInput = 'n' | theUserInput = 'no' | theUserInput = 'y' | theUserInput = 'yes') ifFalse: [ ^ #error].	anAnswer := aQuestion buildAnswer.	anAnswer value: (theUserInput = 'y' | theUserInput ='yes').	^ anAnswer.	! !!BooleanQuestionShellHelper class methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 20:56'!print: aQuestion	| res |	res := super print: aQuestion.	^ (res, '	[Y/Yes/N/No]').! !ProgrammableObject subclass: #Answer	instanceVariableNames: 'question'	classVariableNames: ''	poolDictionaries: ''	category: 'TP-JNE'!!Answer methodsFor: 'accessing' stamp: 'Caro 11/9/2011 21:09'!question	^ question! !!Answer methodsFor: 'accessing' stamp: 'Caro 11/9/2011 21:09'!question: anObject	question := anObject! !Answer subclass: #TextAnswer	instanceVariableNames: 'value'	classVariableNames: ''	poolDictionaries: ''	category: 'TP-JNE'!!TextAnswer methodsFor: 'accessing' stamp: 'MarianoSemelman 11/14/2011 20:52'!printOn: aStream	aStream nextPutAll: value.  ! !!TextAnswer methodsFor: 'accessing' stamp: 'MarianoSemelman 11/14/2011 19:18'!value	^ value! !!TextAnswer methodsFor: 'accessing' stamp: 'MarianoSemelman 11/14/2011 19:18'!value: anObject	value := anObject! !Answer subclass: #BooleanAnswer	instanceVariableNames: 'value'	classVariableNames: ''	poolDictionaries: ''	category: 'TP-JNE'!!BooleanAnswer methodsFor: 'accessing' stamp: 'MarianoSemelman 11/14/2011 20:51'!printOn: aStream	aStream nextPutAll: (value) ifTrue: [^ 'Yes'] ifFalse: [^ 'No'].  ! !!BooleanAnswer methodsFor: 'accessing' stamp: 'MarianoSemelman 11/14/2011 19:20'!value	^ value! !!BooleanAnswer methodsFor: 'accessing' stamp: 'MarianoSemelman 11/14/2011 19:20'!value: anObject	value := anObject! !Object subclass: #ShellHelper	instanceVariableNames: 'form cursor submission'	classVariableNames: ''	poolDictionaries: ''	category: 'TP-JNE'!!ShellHelper methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 19:49'!currentQuestion	(cursor = 0) ifTrue: [#error].	^ form questionAt: cursor.  ! !!ShellHelper methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 19:57'!currentQuestionShellHelper	^ QuestionShellHelper thatHandles: self currentQuestion.! !!ShellHelper methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 21:18'!next	cursor := cursor + 1.	(form countOfQuestions < cursor ) ifTrue: [ self cursor: 1].	^ self showCurrentQuestion.	! !!ShellHelper methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 21:17'!receive: theUserInput	| anAnswer |	anAnswer := self currentQuestion buildAnswer.	anAnswer value: theUserInput. " on: #error do: [^ self showCurrentQuestion ]."	submission addAnswer: anAnswer.	 ! !!ShellHelper methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 20:54'!showCurrentQuestion 	^ self currentQuestionShellHelper  print: self currentQuestion.! !!ShellHelper methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 20:53'!start	self cursor: 0.	^ self next.		! !!ShellHelper methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 20:36'!startUI| output input |output := self start .[ output isNil ] whileFalse: [input := UIManager default request: output.output := self receive: input .].! !!ShellHelper methodsFor: 'accessing' stamp: 'MarianoSemelman 11/14/2011 19:49'!cursor	^ cursor! !!ShellHelper methodsFor: 'accessing' stamp: 'MarianoSemelman 11/14/2011 19:49'!cursor: anObject	cursor := anObject! !!ShellHelper methodsFor: 'accessing' stamp: 'MarianoSemelman 11/14/2011 19:39'!form	^ form! !!ShellHelper methodsFor: 'accessing' stamp: 'MarianoSemelman 11/14/2011 19:39'!form: anObject	form := anObject! !!ShellHelper methodsFor: 'accessing' stamp: 'MarianoSemelman 11/14/2011 19:59'!submission	^ submission! !!ShellHelper methodsFor: 'accessing' stamp: 'MarianoSemelman 11/14/2011 19:59'!submission: anObject	submission := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ShellHelper class	instanceVariableNames: ''!!ShellHelper class methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 20:16'!newWith: aForm	| res |	res := ShellHelper new.	res form: aForm.	res cursor: 0.	res submission: Submission new.  	^ res.! !Object subclass: #Submission	instanceVariableNames: 'form answers'	classVariableNames: ''	poolDictionaries: ''	category: 'TP-JNE'!!Submission methodsFor: 'adding' stamp: 'MarianoSemelman 11/14/2011 17:27'!addAnswer: anAnswer	answers at: anAnswer question  ifPresent: [ #error ] ifAbsent:  [answers at: anAnswer question put: anAnswer ].! !!Submission methodsFor: 'accessing' stamp: 'MarianoSemelman 11/11/2011 14:31'!answerFor: aQuestion	^ answers at: aQuestion.! !!Submission methodsFor: 'accessing' stamp: 'MarianoSemelman 11/11/2011 14:33'!answers	^ answers! !!Submission methodsFor: 'accessing' stamp: 'MarianoSemelman 11/11/2011 14:33'!answers: anObject	answers := anObject! !!Submission methodsFor: 'accessing' stamp: 'MarianoSemelman 11/11/2011 14:27'!form	^ form! !!Submission methodsFor: 'accessing' stamp: 'MarianoSemelman 11/11/2011 14:27'!form: anApplicationForm	form := anApplicationForm! !!Submission methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 20:50'!printOn: aStream	self answers do: [: answer | answer printOn: aStream ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Submission class	instanceVariableNames: ''!!Submission class methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 20:29'!new	| res |	res := super new.	res answers: Dictionary new.	^ res.  ! !Object subclass: #ApplicationForm	instanceVariableNames: 'code questions'	classVariableNames: ''	poolDictionaries: ''	category: 'TP-JNE'!!ApplicationForm methodsFor: 'as yet unclassified' stamp: 'Caro 11/9/2011 20:52'!addQuestion: aQuestion	questions add: aQuestion.! !!ApplicationForm methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/14/2011 20:07'!buildShellHelper	^ ShellHelper newWith: self.  ! !!ApplicationForm methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/7/2011 20:49'!code	"Devuelve code"	|  |	^ code! !!ApplicationForm methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/7/2011 21:29'!code: aCode	"Asigna el codigo"	|  |	code := aCode.	! !!ApplicationForm methodsFor: 'as yet unclassified' stamp: 'Caro 11/9/2011 20:52'!countOfQuestions	^ questions size.! !!ApplicationForm methodsFor: 'as yet unclassified' stamp: 'Caro 11/9/2011 20:52'!questionAt: index	^ questions at: index.	! !!ApplicationForm methodsFor: 'accessing' stamp: 'Caro 11/9/2011 20:51'!questions	^ questions! !!ApplicationForm methodsFor: 'accessing' stamp: 'Caro 11/9/2011 20:51'!questions: anObject	questions := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ApplicationForm class	instanceVariableNames: 'instancias'!!ApplicationForm class methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/8/2011 20:46'!initialize	instancias := Dictionary new.! !!ApplicationForm class methodsFor: 'as yet unclassified' stamp: 'Caro 11/9/2011 21:03'!newWith: aCode	"Crea el objeto con code como mensaje"	| res |	instancias ifNil: [self initialize].	res := ApplicationForm  new.	res questions: OrderedCollection new.	res code: aCode.	instancias at: aCode ifPresent: [#error] ifAbsent: [instancias at: aCode put: res] .	^ res! !!ApplicationForm class methodsFor: 'as yet unclassified' stamp: 'MarianoSemelman 11/8/2011 21:00'!withCode: aCode	"devuelva, si existe, el cuestionario de codigo indicado. Sino nil."	|  |	^ instancias at: aCode ifAbsent: [ ^ nil].! !ApplicationForm initialize!